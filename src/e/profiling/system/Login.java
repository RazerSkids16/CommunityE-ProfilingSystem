/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package e.profiling.system;

/**
 *
 * @author PlonGaming
 */
import JpaImplementation.Accounts;
import JpaImplementation.Accounts_;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.*;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("Community e-Profiling System");
        setIconImage();
        String user = userField.getText();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userField = new javax.swing.JTextField();
        passField = new javax.swing.JPasswordField();
        imgLabel = new javax.swing.JLabel();
        createBtn = new javax.swing.JButton();
        loginBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1406, 806));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("USERNAME");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, 33));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("PASSWORD");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, 34));

        userField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        userField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                userFieldPropertyChange(evt);
            }
        });
        userField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userFieldKeyReleased(evt);
            }
        });
        getContentPane().add(userField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 250, 33));

        passField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        passField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passFieldKeyReleased(evt);
            }
        });
        getContentPane().add(passField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 250, 34));

        imgLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(imgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 200, 151, 151));

        createBtn.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        createBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add User Male_48px.png"))); // NOI18N
        createBtn.setText("Create Account!");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });
        getContentPane().add(createBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, -1, 50));

        loginBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        loginBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Signin_48px.png"))); // NOI18N
        loginBtn.setText("Login!");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        getContentPane().add(loginBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 140, 50));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/e/profiling/system/Login.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        login();
    }//GEN-LAST:event_loginBtnActionPerformed

    private void passFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passFieldKeyReleased
//        searchImage();
//        String user = userField.getText();
//        String pass = passField.getPassword().toString();
//
//        if (user.isEmpty() && pass.isEmpty()) {
//            userField.setText(null);
//            passField.setText(null);
//            imgLabel.setIcon(null);
//        }
    }//GEN-LAST:event_passFieldKeyReleased

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        CreateAccount create = new CreateAccount();
        dispose();
        create.setVisible(true);
    }//GEN-LAST:event_createBtnActionPerformed

    private void userFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userFieldKeyReleased
        searchImage();
        String user = userField.getText().toLowerCase();

        if (user.isEmpty()) {
            imgLabel.setText(null);
            imgLabel.setIcon(null);
        }
    }//GEN-LAST:event_userFieldKeyReleased

    private void userFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_userFieldPropertyChange

    }//GEN-LAST:event_userFieldPropertyChange

    private void passFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            login();
        }
    }//GEN-LAST:event_passFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    public void login() {
        try {
            String user = userField.getText();
            String pass = new String(passField.getPassword());

            if (user.isEmpty() || pass.isEmpty()) {
                JOptionPane.showMessageDialog(null, "FILL UP THE EMPTY FIELDS!", "ERROR!", JOptionPane.ERROR_MESSAGE);
            } else {

                EntityManagerFactory emf = Persistence.createEntityManagerFactory("e-Profiling_SystemPU");
                EntityManager em = emf.createEntityManager();
                CriteriaBuilder cb = em.getCriteriaBuilder();
                CriteriaQuery<Accounts> cq = cb.createQuery(Accounts.class);
                Root<Accounts> root = cq.from(Accounts.class);

                cq.where(
                        cb.equal(root.get(Accounts_.accUsername), user),
                        cb.equal(root.get(Accounts_.accPassword), pass)
                );

                TypedQuery<Accounts> q = em.createQuery(cq);
                Accounts account = q.getSingleResult();
                account.getAccUsername();
                account.getAccPassword();
                JOptionPane.showMessageDialog(null, "ACCESS GRANTED!\nWELCOME!\n" + account.getAccFullname().toUpperCase(), "Community e-Profiling System", JOptionPane.INFORMATION_MESSAGE);
                dispose();
                MainWindow mw = new MainWindow();
                mw.setVisible(true);
                mw.nameDisplay.setText(account.getAccFullname());
                mw.positionDisplay.setText(account.getAccPosition());

                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/rcceps", "root", "");
                    String sql = "SELECT `acc_image` FROM `accounts` WHERE acc_username = '" + user + "'";
                    PreparedStatement pst = con.prepareStatement(sql);
                    ResultSet rs = pst.executeQuery();

                    if (rs.next()) {
                        byte[] image = rs.getBytes("acc_image");
                        ImageIcon image1 = new ImageIcon(image);
                        Image mm = image1.getImage();
                        Image img = mm.getScaledInstance(mw.imageDisplay.getWidth(), mw.imageDisplay.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon image2 = new ImageIcon(img);
                        mw.imageDisplay.setIcon(image2);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ACCESS DENIED!", "WARNING!",
                    JOptionPane.WARNING_MESSAGE);
            userField.setText(null);
            passField.setText(null);
            userField.requestFocus();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createBtn;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passField;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables

    public void searchImage() {
        String search = userField.getText();

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/rcceps", "root", "");
            String sql = "SELECT `acc_image` FROM `accounts` WHERE acc_username = '" + search + "'";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                byte[] image = rs.getBytes("acc_image");
                ImageIcon image1 = new ImageIcon(image);
                Image mm = image1.getImage();
                Image img = mm.getScaledInstance(imgLabel.getWidth(), imgLabel.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon image2 = new ImageIcon(img);
                imgLabel.setIcon(image2);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
    }
}
